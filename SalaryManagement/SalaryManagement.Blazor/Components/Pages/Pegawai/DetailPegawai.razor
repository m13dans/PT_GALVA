@page "/pegawai/details/"
@rendermode InteractiveServer
@inject GajiService _gajiService
@inject PegawaiService _pegawaiService
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment webhostEnv
@inject Microsoft.JSInterop.IJSRuntime _js
@using Blazor.Service
@attribute [StreamRendering]

<h3>Detail Pegawai</h3>

<div>
  <button disabled="@(reportGaji is null)" @onclick="@(() => ViewPDF("iframeId"))" class="btn btn-info text-white"
    href="#"><i class="bi bi-printer"></i>Lihat PDF
    PDF</button>
  <button disabled="@(reportGaji is null)" @onclick="DownloadPDF" class="btn btn-outline-success " href="#"><i
      class="bi bi-printer"></i>Download
    PDF</button>
  <a class="btn btn-outline-warning " href="@($"pegawai/lembur/edit?NomerPegawai={pegawaiVM.NomerPegawai}")">Edit
    Lembur</a>
  <a class="btn btn-outline-info @(reportGaji is null ? "disabled" : "")"
    href="@($"pegawai/lembur?NomerPegawai={pegawaiVM.NomerPegawai}")">Cek
    Lembur</a>

</div>
<div class="d-flex justify-content-center my-3">
  <div id="iframeId" class="position-absolute w-75"></div>
</div>

<dl class="row">
  <dt>
    Nomer Pegawai :
  </dt>
  <dd>
    @pegawaiVM.NomerPegawai
  </dd>
  <dt>
    Nama Pegawai :
  </dt>
  <dd>
    @pegawaiVM.NamaPegawai
  </dd>
  <dt>
    Tanggal Masuk :
  </dt>
  <dd>
    @pegawaiVM.TanggalMasuk.ToShortDateString()
  </dd>
  <dt>
    Jenis Kelamin :
  </dt>
  <dd>
    @Pegawai.ToJenisKelaminString(pegawaiVM.JenisKelamin)
  </dd>
  <dt>
    Status :
  </dt>
  <dd>
    @pegawaiVM.JenisStatus @Status.GetDescription(pegawaiVM.JenisStatus)
  </dd>
  <dt>
    Gaji Pokok :
  </dt>
  <dd>
    @pegawaiVM.GajiPokok.ToString("0.00")
  </dd>
  <dt>
    Uang Makan :
  </dt>
  <dd>
    @pegawaiVM.UangMakan.ToString("0.00")
  </dd>
  <dt>
    Uang Transport :
  </dt>
  <dd>
    @pegawaiVM.UangTransport.ToString("0.00")
  </dd>
  <dt>
    Uang Lembur :
  </dt>
  <dd>
    @pegawaiVM.UangLembur.ToString("0.0000")
  </dd>
  <dt>
    Nilai Tunjangan :
  </dt>
  <dd>
    @pegawaiVM.NilaiTunjangan.ToString("0.00")
  </dd>
  <dt>
    Total Gaji :
  </dt>
  <dd>
    @pegawaiVM.TotalGaji.ToString("0.0000")
  </dd>
</dl>


@code {
  PegawaiRequest pegawaiVM = new();
  [Parameter]
  [SupplyParameterFromQuery]
  public int NomerPegawai { get; set; }

  public ReportGaji reportGaji;

  protected async void DownloadPDF()
  {
    PDFGenerator service = new(webhostEnv);
    MemoryStream documentStream = service.CreatePDF(reportGaji);
    await _js.InvokeAsync<object>(
    "saveAsFile",
    $"Report_Gaji_{reportGaji.NamaPegawai}.pdf",
    Convert.ToBase64String(documentStream.ToArray())
    );
  }
  protected async void ViewPDF(string iframeId)
  {
    PDFGenerator service = new(webhostEnv);
    MemoryStream documentStream = service.CreatePDF(reportGaji);
    await _js.InvokeVoidAsync(
    "viewPDF",
    iframeId,
    Convert.ToBase64String(documentStream.ToArray())
    );
  }

  protected override async Task OnInitializedAsync()
  {
    var response = await _pegawaiService.GetPegawaiById(NomerPegawai);
    var report = await _gajiService.GetReportGajiFor(NomerPegawai);
    if (!report.IsError)
    {
      reportGaji = report.Value;
    }
    if (!response.IsError)
    {
      Pegawai pegawai = response.Value;
      pegawaiVM = new PegawaiRequest()
        {
          NomerPegawai = pegawai.NomerPegawai,
          NamaPegawai = pegawai.NamaPegawai,
          TanggalMasuk = pegawai.TanggalMasuk,
          JenisKelamin = pegawai.JenisKelamin,
          JenisStatus = Status.ToJenisStatusEnum(pegawai.JenisStatus),
          GajiPokok = pegawai.GajiPokok,
          UangMakan = pegawai.UangMakan,
          UangTransport = pegawai.UangTransport,
          UangLembur = pegawai.UangLembur,
          TotalGaji = pegawai.TotalGaji
        };
    }
  }

}